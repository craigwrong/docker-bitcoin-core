# syntax=docker/dockerfile:1

# Part 1: Cross-compile bitcoin core daemon on amd64 targetting arm64 (gnu-linux)
# docker build --target builder -t bitcoin-arm64-builder -f Dockerfile.arm64 .
#
# Part 2: Extract the built binaries to the host filesystem
# mkdir bitcoin-arm64
# docker run --rm -it -v $PWD/bitcoin-arm64:/export bitcoin-arm64-builder /bin/bash -c "cp -R /opt/bitcoin/depends/aarch64-linux-gnu/* /export"
#
# Part 2b: Extract the required ARM 64 LD, GCC and C++ libraries to the host filesystem
# mkdir lib-arm64
# docker run --platform linux/arm64 --rm -it -v $PWD/lib-arm64:/export debian /bin/bash -c "cp /lib/aarch64-linux-gnu/libpthread.so.0 /export && cp /lib/aarch64-linux-gnu/libm.so.6 /export && cp /lib/aarch64-linux-gnu/libgcc_s.so.1 /export && cp /lib/aarch64-linux-gnu/libc.so.6 /export && cp /lib/ld-linux-aarch64.so.1 /export"
#
# Part 3: Generate an arm64 docker image containing the compiled binaries
# docker buildx build --platform linux/arm64 --target daemon -t bitcoin-arm64 -f Dockerfile.arm64 .
#
# Part 4: Export the image and transfer to ARM host
# docker save bitcoin-arm64 | gzip > docker-bitcoin-arm64.tar.gz
# scp docker-bitcoin-arm64.tar.gz ubuntu@raspberrypi:/home/ubuntu
#
# Part 5: Import image on host
# ssh ubuntu@raspberrypi
# docker load < docker-bitcoin-arm64.tar.gz
# docker run --rm bitcoind

FROM debian as prep
RUN apt update && apt -y upgrade && apt install --no-install-recommends --yes wget ca-certificates autoconf automake pkg-config libtool
WORKDIR /opt
RUN wget -qO- https://bitcoincore.org/bin/bitcoin-core-23.0/bitcoin-23.0.tar.gz | tar xzf - && \
    mv bitcoin-23.0 bitcoin && \
    cd bitcoin && \
    ./autogen.sh

FROM debian as builder-base
RUN apt update && apt -y upgrade && apt install --yes --no-install-recommends make g++-aarch64-linux-gnu binutils-aarch64-linux-gnu

FROM builder-base as builder-depends
COPY --from=prep /opt/bitcoin /opt/bitcoin
RUN apt install --yes --no-install-recommends curl ca-certificates lbzip2
WORKDIR /opt/bitcoin/depends
RUN make HOST=aarch64-linux-gnu NO_QT=1 NO_QR=1 NO_ZMQ=1 NO_WALLET=1 NO_BDB=1 NO_SQLITE=1 NO_UPNP=1 NO_NATPMP=1 NO_USDT=1

FROM builder-base as builder
COPY --from=prep /opt/bitcoin /opt/bitcoin
COPY --from=builder-depends /opt/bitcoin/depends/aarch64-linux-gnu /opt/bitcoin/depends/aarch64-linux-gnu
RUN apt install --yes --no-install-recommends pkg-config
WORKDIR /opt/bitcoin
RUN LDFLAGS="-static-libstdc++" ./configure \
        --prefix=`pwd`/depends/aarch64-linux-gnu \
        --without-wallet --without-sqlite --without-bdb --without-gui --without-libs \
        --disable-tests --disable-bench --disable-external-signer \
        --enable-daemon --enable-util-cli --disable-util-tx --disable-util-wallet --disable-util-util && \
    make install

FROM scratch as daemon
COPY bitcoin-arm64/bin/bitcoind /bin/bitcoind
COPY lib-arm64 /lib
VOLUME /.bitcoin
ENTRYPOINT ["/bin/bitcoind"]

FROM scratch as cli
COPY bitcoin-arm64/bin/bitcoin-cli /bin/bitcoin-cli
COPY lib-arm64 /lib
VOLUME /.bitcoin
ENTRYPOINT ["/bin/bitcoin-cli"]
